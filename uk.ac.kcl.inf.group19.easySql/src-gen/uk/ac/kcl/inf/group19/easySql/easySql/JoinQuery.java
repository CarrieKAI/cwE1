/**
 * generated by Xtext 2.25.0
 */
package uk.ac.kcl.inf.group19.easySql.easySql;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Join Query</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.inf.group19.easySql.easySql.JoinQuery#getJtable1 <em>Jtable1</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.group19.easySql.easySql.JoinQuery#getJattributes <em>Jattributes</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.group19.easySql.easySql.JoinQuery#getJointype <em>Jointype</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.group19.easySql.easySql.JoinQuery#getJtable2 <em>Jtable2</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.group19.easySql.easySql.JoinQuery#getJoincondition <em>Joincondition</em>}</li>
 * </ul>
 *
 * @see uk.ac.kcl.inf.group19.easySql.easySql.EasySqlPackage#getJoinQuery()
 * @model
 * @generated
 */
public interface JoinQuery extends QueryStatement
{
  /**
   * Returns the value of the '<em><b>Jtable1</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Jtable1</em>' reference.
   * @see #setJtable1(TableDeclaration)
   * @see uk.ac.kcl.inf.group19.easySql.easySql.EasySqlPackage#getJoinQuery_Jtable1()
   * @model
   * @generated
   */
  TableDeclaration getJtable1();

  /**
   * Sets the value of the '{@link uk.ac.kcl.inf.group19.easySql.easySql.JoinQuery#getJtable1 <em>Jtable1</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Jtable1</em>' reference.
   * @see #getJtable1()
   * @generated
   */
  void setJtable1(TableDeclaration value);

  /**
   * Returns the value of the '<em><b>Jattributes</b></em>' containment reference list.
   * The list contents are of type {@link uk.ac.kcl.inf.group19.easySql.easySql.Vvalue}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Jattributes</em>' containment reference list.
   * @see uk.ac.kcl.inf.group19.easySql.easySql.EasySqlPackage#getJoinQuery_Jattributes()
   * @model containment="true"
   * @generated
   */
  EList<Vvalue> getJattributes();

  /**
   * Returns the value of the '<em><b>Jointype</b></em>' attribute.
   * The literals are from the enumeration {@link uk.ac.kcl.inf.group19.easySql.easySql.Join}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Jointype</em>' attribute.
   * @see uk.ac.kcl.inf.group19.easySql.easySql.Join
   * @see #setJointype(Join)
   * @see uk.ac.kcl.inf.group19.easySql.easySql.EasySqlPackage#getJoinQuery_Jointype()
   * @model
   * @generated
   */
  Join getJointype();

  /**
   * Sets the value of the '{@link uk.ac.kcl.inf.group19.easySql.easySql.JoinQuery#getJointype <em>Jointype</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Jointype</em>' attribute.
   * @see uk.ac.kcl.inf.group19.easySql.easySql.Join
   * @see #getJointype()
   * @generated
   */
  void setJointype(Join value);

  /**
   * Returns the value of the '<em><b>Jtable2</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Jtable2</em>' reference.
   * @see #setJtable2(TableDeclaration)
   * @see uk.ac.kcl.inf.group19.easySql.easySql.EasySqlPackage#getJoinQuery_Jtable2()
   * @model
   * @generated
   */
  TableDeclaration getJtable2();

  /**
   * Sets the value of the '{@link uk.ac.kcl.inf.group19.easySql.easySql.JoinQuery#getJtable2 <em>Jtable2</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Jtable2</em>' reference.
   * @see #getJtable2()
   * @generated
   */
  void setJtable2(TableDeclaration value);

  /**
   * Returns the value of the '<em><b>Joincondition</b></em>' containment reference list.
   * The list contents are of type {@link uk.ac.kcl.inf.group19.easySql.easySql.MultiEquation}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Joincondition</em>' containment reference list.
   * @see uk.ac.kcl.inf.group19.easySql.easySql.EasySqlPackage#getJoinQuery_Joincondition()
   * @model containment="true"
   * @generated
   */
  EList<MultiEquation> getJoincondition();

} // JoinQuery
