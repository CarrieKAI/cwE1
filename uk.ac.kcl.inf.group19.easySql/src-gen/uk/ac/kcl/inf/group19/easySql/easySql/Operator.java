/**
 * generated by Xtext 2.25.0
 */
package uk.ac.kcl.inf.group19.easySql.easySql;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Operator</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see uk.ac.kcl.inf.group19.easySql.easySql.EasySqlPackage#getOperator()
 * @model
 * @generated
 */
public enum Operator implements Enumerator
{
  /**
   * The '<em><b>Va</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #VA_VALUE
   * @generated
   * @ordered
   */
  VA(0, "va", ">"),

  /**
   * The '<em><b>Vb</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #VB_VALUE
   * @generated
   * @ordered
   */
  VB(1, "vb", "<"),

  /**
   * The '<em><b>Vc</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #VC_VALUE
   * @generated
   * @ordered
   */
  VC(2, "vc", ">="),

  /**
   * The '<em><b>Vd</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #VD_VALUE
   * @generated
   * @ordered
   */
  VD(3, "vd", "<="),

  /**
   * The '<em><b>Ve</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #VE_VALUE
   * @generated
   * @ordered
   */
  VE(4, "ve", "!="),

  /**
   * The '<em><b>Vf</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #VF_VALUE
   * @generated
   * @ordered
   */
  VF(5, "vf", "=");

  /**
   * The '<em><b>Va</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #VA
   * @model name="va" literal="&gt;"
   * @generated
   * @ordered
   */
  public static final int VA_VALUE = 0;

  /**
   * The '<em><b>Vb</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #VB
   * @model name="vb" literal="&lt;"
   * @generated
   * @ordered
   */
  public static final int VB_VALUE = 1;

  /**
   * The '<em><b>Vc</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #VC
   * @model name="vc" literal="&gt;="
   * @generated
   * @ordered
   */
  public static final int VC_VALUE = 2;

  /**
   * The '<em><b>Vd</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #VD
   * @model name="vd" literal="&lt;="
   * @generated
   * @ordered
   */
  public static final int VD_VALUE = 3;

  /**
   * The '<em><b>Ve</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #VE
   * @model name="ve" literal="!="
   * @generated
   * @ordered
   */
  public static final int VE_VALUE = 4;

  /**
   * The '<em><b>Vf</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #VF
   * @model name="vf" literal="="
   * @generated
   * @ordered
   */
  public static final int VF_VALUE = 5;

  /**
   * An array of all the '<em><b>Operator</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final Operator[] VALUES_ARRAY =
    new Operator[]
    {
      VA,
      VB,
      VC,
      VD,
      VE,
      VF,
    };

  /**
   * A public read-only list of all the '<em><b>Operator</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<Operator> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Operator</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Operator get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      Operator result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Operator</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Operator getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      Operator result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Operator</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Operator get(int value)
  {
    switch (value)
    {
      case VA_VALUE: return VA;
      case VB_VALUE: return VB;
      case VC_VALUE: return VC;
      case VD_VALUE: return VD;
      case VE_VALUE: return VE;
      case VF_VALUE: return VF;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private Operator(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //Operator
